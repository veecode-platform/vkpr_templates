name: Kong Stack 

on:
  workflow_call:
   secrets:
     AWS_REGION:
      required: true
     AWS_ACCESS_KEY:
       required: true
     AWS_SECRET_KEY:
       required: true
     CLUSTER_NAME:
       required: true
     KONG_ADMIN_PASSWORD:
       required: true
     POSTGRES_PASSWORD:
       required: false
     KONG_LICENSE:
       required: false

jobs:
  kong_stack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Install Vkpr
        shell: bash
        run: |
          curl -fsSL https://get.vkpr.net/ | CONTROL_SKIP="true" bash
          rit update repo --name="vkpr-cli" --version=1.3.5

      ### Configure VKPR Credentials
      - name: config vkpr credentials
        env:
          MODE: ""
        shell: bash
        run: |
            shopt -s expand_aliases
            alias vkpr="rit vkpr"
            MODE=` yq -e '.kong.mode' vkpr.yaml `
            echo $MODE
            rit set credential --provider="aws" \
                --fields="accesskeyid,region,secretaccesskey" \
                --values="${{ secrets.AWS_ACCESS_KEY }},${{ secrets.AWS_REGION }},${{ secrets.AWS_SECRET_KEY }}" 
            if [ '$MODE' != 'dbless' ]; then
              POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
              if [ -n "$POSTGRES_PASSWORD" ]; then
                rit set credential --provider="postgres" \
                --fields="password,service" \
                --values="${{ secrets.POSTGRES_PASSWORD }},postgres" 
              fi
            fi
                
      - name: Kong License and Admin Password
        run: |   
            KONG_ADMIN_PASSWORD=${{ secrets.KONG_ADMIN_PASSWORD }}
            if [ -n "$KONG_ADMIN_PASSWORD" ]; then
                yq -i ".kong.rbac.adminPassword = \"$KONG_ADMIN_PASSWORD\"" $PWD/vkpr.yaml
            fi
            KONG_LICENSE=${{ secrets.KONG_LICENSE }}
            if [ -n "$KONG_LICENSE" ]; then
                touch license 
                echo "$KONG_LICENSE" > license
                yq -i ".kong.enterprise.license = \"$PWD/license\"" $PWD/vkpr.yaml
            fi

      - name: Vkpr apply
        run: |
          shopt -s expand_aliases
          alias vkpr="rit vkpr"
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
          vkpr apply --path_to_file="$(pwd)/vkpr.yaml"

      - name: Upload kubeconfig file as artefact
        uses: actions/upload-artifact@v2
        with:
          name: kubeconfig
          path: ~/.kube/config
