name: Observability Stack 

on:
  workflow_call:
   secrets:
     AWS_REGION:
      required: true
     AWS_ACCESS_KEY:
       required: true
     AWS_SECRET_KEY:
       required: true
     CLUSTER_NAME:
       required: true
     GRAFANA_PASS:
       required: false

jobs:
  observability_stack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      - name: Install Vkpr
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        shell: bash
        run: |
          curl -fsSL https://get.vkpr.net/ | CONTROL_SKIP="true" bash
          rit update repo --name="vkpr-cli" --version=$RELEASE_VERSION


      ### Configure VKPR Credentials
      - name: config vkpr credentials
        shell: bash
        run: |
            alias vkpr="rit vkpr"
            rit set credential --provider="aws" \
                --fields="accesskeyid,region,secretaccesskey" \
                --values="${{ secrets.AWS_ACCESS_KEY }},${{ secrets.AWS_REGION }},${{ secrets.AWS_SECRET_KEY  }}" 

      - name: Vkpr apply
        run: |
          alias vkpr="rit vkpr"
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME}} --region ${{ secrets.AWS_REGION }}
          GRAFANA_PASS=${{ secrets.GRAFANA_PASS }}
          if [ -n "$GRAFANA_PASS" ]; then
            yq -i ".prometheus-stack.grafana.adminPassword = \"$GRAFANA_PASS\"" ./vkpr.yaml
          fi
          cat ./vkpr.yaml
          rit vkpr apply --path_to_file="$(pwd)/vkpr.yaml"

      - name: Upload kubeconfig file as artefact
        uses: actions/upload-artifact@v2
        with:
          name: kubeconfig
          path: ~/.kube/config
